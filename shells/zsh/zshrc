# zshrc compile
if [ ~/.zshrc -nt ~/.zshrc.zwc ]; then
  zcompile ~/.zshrc
fi

# シェル操作をvim互換にする
bindkey -v

# ----------------------------------------------------------------
# cdを使わずにディレクトリを移動できる
setopt auto_cd
# "cd -"の段階でTabを押すと、ディレクトリの履歴が見れる
setopt auto_pushd
# コマンドの打ち間違いを指摘してくれる
setopt correct
#単語の入力途中でもTab補完を有効化
setopt complete_in_word
# 補完候補をハイライト
zstyle ':completion:*:default' menu select=1
# キャッシュの利用による補完の高速化
zstyle ':completion::complete:*' use-cache true
#大文字、小文字を区別せず補完する
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
# 補完リストの表示間隔を狭くする
setopt list_packed
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# 補完カラーj
autoload -U colors
colors
zstyle ':completion:*' list-colors "${LS_COLORS}"

# コマンドヒストリー共有
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
# プロセスを横断してヒストリを共有
setopt inc_append_history
# ヒストリの共有の有効化
setopt share_history
# 直前と同じコマンドをヒストリに追加しない
setopt hist_ignore_dups
# ヒストリに追加されるコマンドが古いものと同じなら古いものを削除
setopt hist_ignore_all_dups
setopt append_history        # 履歴を追加 (毎回 .zsh_history を作るのではなく)
setopt hist_no_store         # historyコマンドは履歴に登録しない
setopt hist_reduce_blanks    # 余分な空白は詰めて記録
# ----------------------------------------------------------------

### alias
# ----------------------------------------------------------------
# lsのエイリアス
alias la='ls -A'
alias lg='ls -Agh'
# alias ll='ls -Ahl'
# 隠しファイルのみ表示
alias ld='ls -dh .*'
alias lld='ls -ldh .*'

# 確認
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# 省略
alias v=nvim
alias vimdiff='nvim -d'
alias e=echo
alias th=touch

# sudo の後のコマンドでエイリアスを有効にするらしい
alias sudo='sudo '

# クリップボードにコピー
alias pb='pbcopy <'
alias -g C='| pbcopy' #個人的にこれがクソ便利です

# 出力からgrep
alias -g G='| grep'

# 設定ファイルをどっからでもすぐ開く
alias -g zrc='~/.zshrc'

# rust cui
alias ls='eza --icons'
alias ll='eza -ahl --git --icons'

# git関連お好みで
alias g=git
alias gad='git add'
alias gau='git add -u'
alias gaa='git add -A'
alias gc='git commit -m'
alias gl='git log --oneline'
alias gs='git status -sb'

#ctags override
# alias ctags='/usr/local/bin/ctags'
alias ctags="`brew --prefix`/bin/ctags"
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# $fpath 追加
if [ -e /usr/local/share/zsh-completions ]; then
  fpath=(/usr/local/share/zsh-completions/src $fpath)
fi
# for docker and docker-compose
if [ -e $HOME/.docker -a -e $HOME/.zsh_functions -a ! -h $HOME/.zsh_functions/_docker ]; then
  ETC=/Applications/Docker.app/Contents/Resources/etc
  ln -s $ETC/docker.zsh-completion $HOME/.zsh_functions/_docker
  ln -s $ETC/docker-compose.zsh-completion $HOME/.zsh_functions/_docker-compose
fi
# for alacritty zsh_completions
if [ -e $HOME/.zsh_functions ]; then
  fpath+=$HOME/.zsh_functions
fi
# ----------------------------------------------------------------

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

# 追加補完を有効
autoload -Uz compinit && compinit -i

### 読み込み
# ----------------------------------------------------------------
# # source fzf config
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# source z.sh
[ -f /opt/homebrew/etc/profile.d/z.sh ] && source /opt/homebrew/etc/profile.d/z.sh
# starship
eval "$(starship init zsh)"
# for zsh-autosuggestions
source `brew --prefix`/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# for zsh-syntax-highrighting
source `brew --prefix`/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# for my zsh cmd
source $HOME/.zcmd.sh
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# fzf-z-search() keybind
zle -N fzf-z-search
bindkey '^f' fzf-z-search
# ----------------------------------------------------------------

# zsh-autosuggestions color
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=cyan"

# for nix
# [ -f $HOME/.nix-profile/etc/profile.d/nix.sh ] && . $HOME/.nix-profile/etc/profile.d/nix.sh

eval "$(mise activate zsh)"
eval "$(mise hook-env -s zsh)"
eval "$(mise completion zsh)"

# Wasmer
export WASMER_DIR="$HOME/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

export PATH="$HOME/.poetry/bin:$PATH"

# for direnv
eval "$(direnv hook zsh)"

# for modular
export MODULAR_HOME="$HOME/.modular"
export PATH="$MODULAR_HOME/pkg/packages.modular.com_mojo/bin:$PATH"

# for kompose
[ -f /opt/homebrew/bin/kompose ] && source <(kompose completion zsh)
